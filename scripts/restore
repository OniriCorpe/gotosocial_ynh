#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

#REMOVEME? #REMOVEME? ynh_clean_setup () {
	#### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
#REMOVEME? #REMOVEME? ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Loading installation settings..." --weight=1

#REMOVEME? #REMOVEME? app="$YNH_APP_INSTANCE_NAME"

#REMOVEME? #REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app="$app" --key=install_dir)

#REMOVEME? #REMOVEME? domain=$(ynh_app_setting_get --app="$app" --key=domain)
#REMOVEME? #REMOVEME? port=$(ynh_app_setting_get --app="$app" --key=port)
#REMOVEME? #REMOVEME? path=$(ynh_app_setting_get --app="$app" --key=path)

#REMOVEME? #REMOVEME? client_max_body_size=$(ynh_app_setting_get --app="$app" --key=client_max_body_size)

#REMOVEME? #REMOVEME? db_name=$(ynh_app_setting_get --app="$app" --key=db_name)
#REMOVEME? db_user=$db_name
#REMOVEME? #REMOVEME? db_pwd=$(ynh_app_setting_get --app="$app" --key=db_pwd)

#REMOVEME? #REMOVEME? data_dir=$(ynh_app_setting_get --app="$app" --key=data_dir)

#REMOVEME? #REMOVEME? registration_open=$(ynh_app_setting_get --app="$app" --key=registration_open)
#REMOVEME? #REMOVEME? registration_approval=$(ynh_app_setting_get --app="$app" --key=registration_approval)
#REMOVEME? #REMOVEME? registration_reason=$(ynh_app_setting_get --app="$app" --key=registration_reason)

#REMOVEME? #REMOVEME? media_image_max_size=$(ynh_app_setting_get --app="$app" --key=media_image_max_size)
#REMOVEME? #REMOVEME? media_video_max_size=$(ynh_app_setting_get --app="$app" --key=media_video_max_size)
#REMOVEME? #REMOVEME? media_description_min_chars=$(ynh_app_setting_get --app="$app" --key=media_description_min_chars)
#REMOVEME? #REMOVEME? media_description_max_chars=$(ynh_app_setting_get --app="$app" --key=media_description_max_chars)
#REMOVEME? #REMOVEME? media_remote_cache_days=$(ynh_app_setting_get --app="$app" --key=media_remote_cache_days)

#REMOVEME? #REMOVEME? statuses_max_chars=$(ynh_app_setting_get --app="$app" --key=statuses_max_chars)
#REMOVEME? #REMOVEME? statuses_cw_max_chars=$(ynh_app_setting_get --app="$app" --key=statuses_cw_max_chars)
#REMOVEME? #REMOVEME? statuses_poll_max_options=$(ynh_app_setting_get --app="$app" --key=statuses_poll_max_options)
#REMOVEME? #REMOVEME? statuses_poll_option_max_chars=$(ynh_app_setting_get --app="$app" --key=statuses_poll_option_max_chars)
#REMOVEME? #REMOVEME? statuses_media_max_files=$(ynh_app_setting_get --app="$app" --key=statuses_media_max_files)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Validating restoration parameters..." --weight=1

#REMOVEME? test ! -d "$install_dir" \
	|| ynh_die --message="There is already a directory: $install_dir "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the NGINX configuration..." --weight=1

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RECREATE THE DEDICATED USER
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Recreating the dedicated system user..." --weight=1

# Create the dedicated user (if not existing)
#REMOVEME? #REMOVEME? ynh_system_user_create --username="$app" --home_dir="$install_dir"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --weight=1

ynh_restore_file --origin_path="$install_dir"

# FIXME: this should be managed by the core in the future
# Here, as a packager, you may have to tweak the ownerhsip/permissions
# such that the appropriate users (e.g. maybe www-data) can access
# files in some cases.
# But FOR THE LOVE OF GOD, do not allow r/x for "others" on the entire folder -
# this will be treated as a security issue.
chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R "$app:www-data" "$install_dir"

#=================================================
# RESTORE THE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Restoring the data directory..." --weight=5

ynh_restore_file --origin_path="$data_dir" --not_mandatory

mkdir -p "$data_dir"

# FIXME: this should be managed by the core in the future
# Here, as a packager, you may have to tweak the ownerhsip/permissions
# such that the appropriate users (e.g. maybe www-data) can access
# files in some cases.
# But FOR THE LOVE OF GOD, do not allow r/x for "others" on the entire folder -
# this will be treated as a security issue.
chmod 750 "$data_dir"
chmod -R o-rwx "$data_dir"
chown -R "$app:www-data" "$data_dir"

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Reinstalling dependencies..." --weight=5

# Define and install dependencies
#REMOVEME? #REMOVEME? ynh_exec_warn_less ynh_install_app_dependencies "$pkg_dependencies"

#=================================================
# RESTORE THE POSTGRESQL DATABASE
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Restoring the PostgreSQL database..." --weight=5

#REMOVEME? #REMOVEME? ynh_psql_test_if_first_run
#REMOVEME? #REMOVEME? ynh_psql_setup_db --db_user="$db_user" --db_name="$db_name" --db_pwd="$db_pwd"
ynh_psql_execute_as_root --sql="CREATE EXTENSION IF NOT EXISTS unaccent;" --database="$db_name"
ynh_psql_execute_as_root --sql="CREATE EXTENSION IF NOT EXISTS pg_trgm;" --database="$db_name"
ynh_psql_execute_as_root --sql="CREATE EXTENSION IF NOT EXISTS citext;" --database="$db_name"
ynh_psql_execute_as_root --sql="CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";" --database="$db_name"
ynh_psql_execute_file_as_root --file="./db.sql" --database="$db_name"

#=================================================
# RESTORE VARIOUS FILES
#=================================================

mkdir -p "/var/log/$app"

#=================================================
# RESTORE SYSTEMD
#=================================================
ynh_script_progression --message="Restoring the systemd configuration..." --weight=1

ynh_restore_file --origin_path="/etc/systemd/system/$app.service"
systemctl enable "$app.service" --quiet

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add "$app" --description="Gotosocial server" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name="$app" --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the logrotate configuration..." --weight=1

ynh_restore_file --origin_path="/etc/logrotate.d/$app"

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --last
