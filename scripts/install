#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

#REMOVEME? #REMOVEME? ynh_clean_setup () {
	### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
#REMOVEME? #REMOVEME? ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

#REMOVEME? #REMOVEME? app="$YNH_APP_INSTANCE_NAME"

#REMOVEME? #REMOVEME? domain="$YNH_APP_ARG_DOMAIN"
path="/"

client_max_body_size="100M"

#REMOVEME? #REMOVEME? admin="$YNH_APP_ARG_ADMIN"
#REMOVEME? #REMOVEME? email="$YNH_APP_ARG_EMAIL"
#REMOVEME? #REMOVEME? password="$YNH_APP_ARG_PASSWORD"

# Config stuff:

#REMOVEME? #REMOVEME? accounts_registration_open=$(convert_bool "$YNH_APP_ARG_ACCOUNTS_REGISTRATION_OPEN")
#REMOVEME? #REMOVEME? accounts_approval_required=$(convert_bool "$YNH_APP_ARG_ACCOUNTS_APPROVAL_REQUIRED")
#REMOVEME? #REMOVEME? accounts_reason_required=$(convert_bool "$YNH_APP_ARG_ACCOUNTS_REASON_REQUIRED")
accounts_allow_custom_css="false"

instance_expose_peers="false"
instance_expose_suspended="false"
instance_deliver_to_shared_inboxes="true"

media_image_max_size="10485760"
media_video_max_size="41943040"
media_description_min_chars="0"
media_description_max_chars="500"
media_remote_cache_days="30"
media_emoji_local_max_size="51200"
media_emoji_remote_max_size="102400"

statuses_max_chars="5000"
statuses_cw_max_chars="100"
statuses_poll_max_options="6"
statuses_poll_option_max_chars="50"
statuses_media_max_files="6"

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================

#REMOVEME? #REMOVEME? ynh_script_progression --message="Validating installation parameters..." --weight=1

#REMOVEME? install_dir="/var/www/$app"
#REMOVEME? test ! -e "$install_dir" || ynh_die --message="This path already contains a folder"

#REMOVEME? #REMOVEME? ynh_webpath_register --app="$app" --domain="$domain" --path="$path"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Storing installation settings..." --weight=1

#REMOVEME? ynh_app_setting_set --app="$app" --key=install_dir --value="$install_dir"

#REMOVEME? #REMOVEME? ynh_app_setting_set --app="$app" --key=domain --value="$domain"
#REMOVEME? #REMOVEME? ynh_app_setting_set --app="$app" --key=path --value="$path"

ynh_app_setting_set --app="$app" --key=client_max_body_size --value="$client_max_body_size"

#REMOVEME? #REMOVEME? ynh_app_setting_set --app="$app" --key=admin --value="$admin"
ynh_app_setting_set --app="$app" --key=email --value="$email"
#REMOVEME? #REMOVEME? ynh_app_setting_set --app="$app" --key=password --value="$password"

ynh_app_setting_set --app="$app" --key=accounts_registration_open --value="$accounts_registration_open"
ynh_app_setting_set --app="$app" --key=accounts_approval_required --value="$accounts_approval_required"
ynh_app_setting_set --app="$app" --key=accounts_reason_required --value="$accounts_reason_required"
ynh_app_setting_set --app="$app" --key=accounts_allow_custom_css --value="$accounts_allow_custom_css"

ynh_app_setting_set --app="$app" --key=instance_expose_peers --value="$instance_expose_peers"
ynh_app_setting_set --app="$app" --key=instance_expose_suspended --value="$instance_expose_suspended"
ynh_app_setting_set --app="$app" --key=instance_deliver_to_shared_inboxes --value="$instance_deliver_to_shared_inboxes"

ynh_app_setting_set --app="$app" --key=media_image_max_size --value="$media_image_max_size"
ynh_app_setting_set --app="$app" --key=media_video_max_size --value="$media_video_max_size"
ynh_app_setting_set --app="$app" --key=media_description_min_chars --value="$media_description_min_chars"
ynh_app_setting_set --app="$app" --key=media_description_max_chars --value="$media_description_max_chars"
ynh_app_setting_set --app="$app" --key=media_remote_cache_days --value="$media_remote_cache_days"
ynh_app_setting_set --app="$app" --key=media_emoji_local_max_size --value="$media_emoji_local_max_size"
ynh_app_setting_set --app="$app" --key=media_emoji_remote_max_size --value="$media_emoji_remote_max_size"

ynh_app_setting_set --app="$app" --key=statuses_max_chars --value="$statuses_max_chars"
ynh_app_setting_set --app="$app" --key=statuses_cw_max_chars --value="$statuses_cw_max_chars"
ynh_app_setting_set --app="$app" --key=statuses_poll_max_options --value="$statuses_poll_max_options"
ynh_app_setting_set --app="$app" --key=statuses_poll_option_max_chars --value="$statuses_poll_option_max_chars"
ynh_app_setting_set --app="$app" --key=statuses_media_max_files --value="$statuses_media_max_files"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Finding an available port..." --weight=1

# Find an available port
#REMOVEME? #REMOVEME? port=$(ynh_find_port --port=8095)
#REMOVEME? #REMOVEME? ynh_app_setting_set --app="$app" --key=port --value="$port"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Installing dependencies..." --weight=5

#REMOVEME? #REMOVEME? ynh_exec_warn_less ynh_install_app_dependencies "$pkg_dependencies"

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Configuring system user..." --weight=1

# Create a system user
#REMOVEME? #REMOVEME? ynh_system_user_create --username="$app" --home_dir="$install_dir"

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Creating a PostgreSQL database..." --weight=5

#REMOVEME? db_name=$(ynh_sanitize_dbid --db_name="$app")
#REMOVEME? db_user="$db_name"
#REMOVEME? db_pwd=$(ynh_string_random --length=30)
#REMOVEME? #REMOVEME? ynh_app_setting_set --app="$app" --key=db_name --value="$db_name"
#REMOVEME? #REMOVEME? ynh_app_setting_set --app="$app" --key=db_user --value="$db_user"
#REMOVEME? #REMOVEME? ynh_app_setting_set --app="$app" --key=db_pwd --value="$db_pwd"
#REMOVEME? #REMOVEME? ynh_psql_test_if_first_run
#REMOVEME? #REMOVEME? ynh_psql_setup_db --db_user="$db_user" --db_name="$db_name" --db_pwd="$db_pwd"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

### `ynh_setup_source` is used to install an app from a zip or tar.gz file,
### downloaded from an upstream source, like a git repository.
### `ynh_setup_source` use the file conf/app.src

# detect_arch comes from _common.sh / personnal helpers
architecture=$(detect_arch)

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --source_id="$architecture"

# FIXME: this should be managed by the core in the future
# Here, as a packager, you may have to tweak the ownerhsip/permissions
# such that the appropriate users (e.g. maybe www-data) can access
# files in some cases.
# But FOR THE LOVE OF GOD, do not allow r/x for "others" on the entire folder _
# this will be treated as a security issue.
chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R "$app:www-data" "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# CREATE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Creating a data directory..." --weight=1

#REMOVEME? data_dir=/home/yunohost.app/$app
#REMOVEME? ynh_app_setting_set --app="$app" --key=data_dir --value="$data_dir"

mkdir -p "$data_dir"

# FIXME: this should be managed by the core in the future
# Here, as a packager, you may have to tweak the ownerhsip/permissions
# such that the appropriate users (e.g. maybe www-data) can access
# files in some cases.
# But FOR THE LOVE OF GOD, do not allow r/x for "others" on the entire folder -
# this will be treated as a security issue.
chmod 750 "$data_dir"
chmod -R o-rwx "$data_dir"
chown -R "$app:www-data" "$data_dir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template="config.yaml" --destination="$install_dir/config.yaml"

# FIXME: this should be handled by the core in the future
# You may need to use chmod 600 instead of 400,
# for example if the app is expected to be able to modify its own config
chmod 400 "$install_dir/config.yaml"
chown "$app:$app" "$install_dir/config.yaml"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=1

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..." --weight=1

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add "$app" --description="Gotosocial server" --log="/var/log/$app/$app.log"

#=================================================
# CREATE ADMIN USER
#=================================================
ynh_script_progression --message="Creating gotosocial admin user..." --weight=1

"$install_dir"/gotosocial --config-path "$install_dir/config.yaml" admin account create --username "$admin" --email "$email" --password "$password"

"$install_dir"/gotosocial --config-path "$install_dir/config.yaml" admin account confirm --username "$admin"

"$install_dir"/gotosocial --config-path "$install_dir/config.yaml" admin account promote --username "$admin"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

# Start a systemd service
ynh_systemd_action --service_name="$app" --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
#REMOVEME? #REMOVEME? ynh_script_progression --message="Configuring permissions..." --weight=1

# Everyone can access the app.
#REMOVEME? #REMOVEME? ynh_permission_update --permission="main" --add="visitors"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
